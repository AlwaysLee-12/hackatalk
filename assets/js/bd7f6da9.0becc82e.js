(self.webpackChunkhackatalk_website=self.webpackChunkhackatalk_website||[]).push([[6762],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},l=Object.keys(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var p=r.createContext({}),s=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},c=function(t){var e=s(t.components);return r.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,l=t.originalType,p=t.parentName,c=i(t,["components","mdxType","originalType","parentName"]),m=s(n),d=a,g=m["".concat(p,".").concat(d)]||m[d]||u[d]||l;return n?r.createElement(g,o(o({ref:e},c),{},{components:n})):r.createElement(g,o({ref:e},c))}));function d(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=t,i.mdxType="string"==typeof t?t:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8520:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return o},metadata:function(){return i},toc:function(){return p},default:function(){return c}});var r=n(2122),a=n(9756),l=(n(7294),n(3905)),o={id:"pgcli",title:"pgcli"},i={unversionedId:"postgres/pgcli",id:"postgres/pgcli",isDocsHomePage:!1,title:"pgcli",description:"Pgcli is a command line interface for Postgres with auto-completion and syntax highlighting.",source:"@site/docs/postgres/pgcli.md",sourceDirName:"postgres",slug:"/postgres/pgcli",permalink:"/hackatalk/docs/postgres/pgcli",editUrl:"https://github.com/dooboolab/hackatalk/tree/master/website/docs/postgres/pgcli.md",version:"current",frontMatter:{id:"pgcli",title:"pgcli"},sidebar:"docs",previous:{title:"Shell",permalink:"/hackatalk/docs/postgres/shell"}},p=[{value:"Install",id:"install",children:[]},{value:"Terminal Term Usage",id:"terminal-term-usage",children:[]}],s={toc:p};function c(t){var e=t.components,n=(0,a.Z)(t,["components"]);return(0,l.kt)("wrapper",(0,r.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Pgcli is a command line interface for Postgres with auto-completion and syntax highlighting."),(0,l.kt)("h3",{id:"install"},"Install"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ pip install pgcli\n")),(0,l.kt)("h3",{id:"terminal-term-usage"},"Terminal Term Usage"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Options"),(0,l.kt)("th",{parentName:"tr",align:null},"Explanation"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"-h, --host TEXT"),(0,l.kt)("td",{parentName:"tr",align:null},"Host address of the postgres database")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"-p, --port INTEGER"),(0,l.kt)("td",{parentName:"tr",align:null},"Port number at which the postgres instance is listening")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"-U, --username TEXT"),(0,l.kt)("td",{parentName:"tr",align:null},"Username to connect to the postgres database")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"-u, --user TEXT"),(0,l.kt)("td",{parentName:"tr",align:null},"Username to connect to the postgres database")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"-W, --password"),(0,l.kt)("td",{parentName:"tr",align:null},"Force password prompt")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"-w, --no-password"),(0,l.kt)("td",{parentName:"tr",align:null},"Never prompt for password")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--single-connection"),(0,l.kt)("td",{parentName:"tr",align:null},"Do not use a separate connection for completions")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"-v, --version"),(0,l.kt)("td",{parentName:"tr",align:null},"Version of pgcli")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"-d, --dbname TEXT"),(0,l.kt)("td",{parentName:"tr",align:null},"database name to connect to")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--pgclirc PATH"),(0,l.kt)("td",{parentName:"tr",align:null},"Location of pgclirc file")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"-D, --dsn TEXT"),(0,l.kt)("td",{parentName:"tr",align:null},"Use DSN configured into the ","[alias_dsn]"," section of pgclirc file")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--list-dsn"),(0,l.kt)("td",{parentName:"tr",align:null},"list of DSN configured into the ","[alias_dsn]"," section of pgclirc file")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--row-limit INTEGER"),(0,l.kt)("td",{parentName:"tr",align:null},"Set threshold for row limit prompt. Use 0 to disable prompt")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--less-chatty"),(0,l.kt)("td",{parentName:"tr",align:null},"Skip intro on startup and goodbye on exit")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--prompt TEXT"),(0,l.kt)("td",{parentName:"tr",align:null},'Prompt format (Default: "\\u@\\h:\\d> ")')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--prompt-dsn TEXT"),(0,l.kt)("td",{parentName:"tr",align:null},'Prompt format for connections using DSN aliases (Default: "\\u@\\h:\\d> ")')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"-l, --list"),(0,l.kt)("td",{parentName:"tr",align:null},"list available databases, then exit")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--auto-vertical-output"),(0,l.kt)("td",{parentName:"tr",align:null},"Automatically switch to vertical output mode if the result is wider than the terminal width")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--warn / --no-warn"),(0,l.kt)("td",{parentName:"tr",align:null},"Warn before running a destructive query")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--help"),(0,l.kt)("td",{parentName:"tr",align:null},"Show this message and exit")))))}c.isMDXComponent=!0}}]);